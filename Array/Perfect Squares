/*Given a positive integer n, find the least number of perfect square numbers (for example, 1, 4, 9, 16, ...) which sum to n.
For example, given n = 12, return 3 because 12 = 4 + 4 + 4; given n = 13, return 2 because 13 = 4 + 9.
*/
//思路：
//	C = a+b*b;所以dp[c]=dp[a]+1;若c本来就是平方数，则dp[c]=1；
public class Solution {
    public int numSquares(int n) {
        int[] dp = new int[n+1];
        Arrays.fill(dp,Integer.MAX_VALUE);
        for(int i = 0;i*i <= n;i++){
            dp[i*i] = 1;
        }
        for(int a = 0;a <= n;a++){
            for(int b = 0;a+b*b <= n;b++){
                dp[a+b*b] = Math.min(dp[a+b*b],dp[a]+1);
            }
        }
        return dp[n];
    }
}

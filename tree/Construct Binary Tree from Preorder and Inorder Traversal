//Given preorder and inorder traversal of a tree, construct the binary tree.
//思路：
//	与上题类似。
	/**
	 * Definition for a binary tree node.
	 * public class TreeNode {
	 *     int val;
	 *     TreeNode left;
	 *     TreeNode right;
	 *     TreeNode(int x) { val = x; }
	 * }
	 */
	public class Solution {
	    public TreeNode buildTree(int[] preorder, int[] inorder) {
	        if (inorder == null || preorder == null || inorder.length != preorder.length)
	            return null;
	        HashMap<Integer, Integer> hm = new HashMap<Integer,Integer>();
	        for (int i=0;i<inorder.length;++i)
	            hm.put(inorder[i], i);
	        return buildTreePreIn(inorder, 0, inorder.length-1, preorder, 0,hm);
	    }
	    public TreeNode buildTreePreIn(int[] inorder,int is,int ie,int[] preorder,int ps,HashMap<Integer,Integer> hm){
	        if(is > ie || ps > preorder.length-1){
	            return null;
	        }
	        int ri = hm.get(preorder[ps]);
	        TreeNode root = new TreeNode(preorder[ps]);
	        TreeNode left = buildTreePreIn(inorder,is,ri-1,preorder,ps+1,hm);
	        TreeNode right = buildTreePreIn(inorder,ri+1,ie,preorder,ps+(ri-is)+1,hm);
	        root.left =left;
	        root.right = right;
	        return root;
	    }
	}

